function replaceAll(a, b, c) {
    return a.replace(new RegExp(b, "g"), c)
}
function getFileExtension(a) {
    return/[.]/.exec(a)[0] ? /[^.]+$/.exec(a)[0] : ""
}
function getRandomInt(a, b) {
    return Math.floor(Math.random() * (b - a + 1)) + a
}
function cloneObject(a) {
    if (a == null || typeof a != "object")return a;
    var b = a.constructor();
    for (var c in a)b[c] = cloneObject(a[c]);
    return b
}
function defineGetterSetter(a, b, c, d) {
    Object.defineProperty ? Object.defineProperty(a, b, {get: c, set: d}) : document.__defineGetter__ && (a.__defineGetter__(b, c), a.__defineSetter__(b, d)), a["get" + b] = c, a["set" + b] = d
}
Function.prototype.bind === undefined && (Function.prototype.bind = function () {
    var a = this, b = [].slice.call(arguments), c = b.shift();
    return function () {
        return a.apply(c, b.concat([].slice.call(arguments)))
    }
}), Array.prototype.remove === undefined && (Array.prototype.remove = function (a) {
    for (var b = 0; b < this.length; b++)a === this[b] && this.splice(b, 1)
}), function (a) {
    a.flash = a.flash || {}, a.flash.currentId = 0;
    var b = function () {
        return a.flash.currentId++
    }, c = function (b, c, d) {
        if (a.XMLHttpRequest)var e = new XMLHttpRequest; else if (a.ActiveXObject)var e = new ActiveXObject("Microsoft.XMLHTTP");
        e.onreadystatechange = function () {
            e.readyState == 4 && (e.status == 200 || e.status == 0 ? c(JSON.parse(e.response || e.responseText)) : d(e.response || e.responseText))
        }, e.open("GET", b, !0), e.send(null)
    };
    a.flash.extend = function (a, b) {
        a === undefined && (a = new Object);
        if (a !== undefined)for (var c in b)b.hasOwnProperty(c) && (a[c] = b[c]); else a = b;
        return a
    };
    var d = function () {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (a, b) {
            window.setTimeout(a, 1e3 / 60)
        }
    }(), e = function () {
        if (a.flash.stages !== undefined) {
            var b = Date.now();
            for (var c in a.flash.stages) {
                var d = b - a.flash.stages[c].lastFrameTime;
                if (a.flash.stages[c].enabled === !0 && d > a.flash.stages[c].interval) {
                    if (a.flash.stages[c].onEnterFrame) {
                        var e = Math.floor(d / a.flash.stages[c].interval);
                        e = Math.min(e, 50);
                        for (e; e > 0; e--)a.flash.stages[c].onEnterFrame()
                    }
                    a.flash.stages[c].lastFrameTime = Date.now(), a.flash.stages[c].render()
                }
            }
        }
        if (a.flash.hooks.length > 0) {
            var f = a.flash.hooks.length;
            for (var c = 0; c < f; c++)a.flash.hooks[c]()
        }
        window.requestAnimFrame(a.onEnterFrame)
    };
    a.flash.subscribeToEnterFrame = function (b) {
        for (var c = 0; c < a.flash.hooks.length; c++)if (a.flash.hooks[c] === b)return;
        a.flash.hooks.push(b)
    }, a.flash.unsubscribeFromEnterFrame = function (b) {
        a.flash.hooks.remove(b)
    }, a.flash.cloneToNamespaces = function (b, c) {
        a[c] = a.flash[c] = b
    }, a.flash.hooks = [];
    var f = function (a) {
        a.style.backgroundColor = "#ffffff", a.color = "#000000", a.innerHTML = "<div style='margin: 45px 45px 45px 45px; font-weight: bold; font-family: Arial; font-size: 40px; line-height: 36px;'>YOUR BROWSER<br>IS NOT SUPPORTED<p style='font-size: 24px;'>TRY ONE OF THESE:</p><p style='font-size: 24px;'><a href='https://www.google.com/intl/en/chrome/browser/'>Chrome</a>, <a href='http://windows.microsoft.com/en-US/internet-explorer/downloads/ie-9/worldwide-languages'>Internet explorer 9</a>, <a href='http://support.apple.com/downloads/#safari'>Safari</a>, <a href='http://www.mozilla.org/'>Firefox</a></p></div>"
    };
    a.flash.cloneToNamespaces(f, "showBrowserIsNotSupportedWindow"), a.flash.cloneToNamespaces(navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? !0 : !1, "iOS"), a.flash.cloneToNamespaces(navigator.userAgent.match(/(iPad)/i) ? !0 : !1, "iPad"), a.flash.cloneToNamespaces(navigator.userAgent.match(/(iPhone)/i) ? !0 : !1, "iPhone"), a.flash.cloneToNamespaces(navigator.userAgent.match(/(iPod)/i) ? !0 : !1, "iPod"), a.flash.cloneToNamespaces(navigator.userAgent.match(/(iPad)/i) && window.devicePixelRatio && window.devicePixelRatio >= 2 ? !0 : !1, "iPad3"), a.flash.cloneToNamespaces(navigator.userAgent.toLowerCase().indexOf("android") > -1 ? !0 : !1, "Android"), a.flash.cloneToNamespaces(c, "ajax"), a.flash.cloneToNamespaces(b, "UID"), a.flash.cloneToNamespaces(d, "requestAnimFrame"), a.flash.cloneToNamespaces(e, "onEnterFrame"), a.flash.onWindowFocus = function () {
        clearInterval(a.flash.checkFocusInterval);
        for (var b in a.flash.stages)a.flash.stages[b].lastFrameTime = Date.now()
    }, a.addEventListener("blur", function () {
        a.flash.windowFocusLeft = !0, a.flash.checkFocusInterval = setInterval(a.flash.onWindowFocus, 1e3)
    }), a.onEnterFrame()
}(window), function (a) {
    var b = function (a, b, c, d, e, f) {
        this.initialize(a, b, c, d, e, f)
    }, c = b.prototype;
    b.identity = null, b.DEG_TO_RAD = Math.PI / 180, c.a = 1, c.b = 0, c.c = 0, c.d = 1, c.tx = 0, c.ty = 0, c.alpha = 1, c.shadow = null, c.compositeOperation = null, c.initialize = function (a, b, c, d, e, f) {
        return a != null && (this.a = a), this.b = b || 0, this.c = c || 0, d != null && (this.d = d), this.tx = e || 0, this.ty = f || 0, this
    }, c.prepend = function (a, b, c, d, e, f) {
        var g = this.tx;
        if (a != 1 || b != 0 || c != 0 || d != 1) {
            var h = this.a, i = this.c;
            this.a = h * a + this.b * c, this.b = h * b + this.b * d, this.c = i * a + this.d * c, this.d = i * b + this.d * d
        }
        return this.tx = g * a + this.ty * c + e, this.ty = g * b + this.ty * d + f, this
    }, c.append = function (a, b, c, d, e, f) {
        var g = this.a, h = this.b, i = this.c, j = this.d;
        return this.a = a * g + b * i, this.b = a * h + b * j, this.c = c * g + d * i, this.d = c * h + d * j, this.tx = e * g + f * i + this.tx, this.ty = e * h + f * j + this.ty, this
    }, c.prependMatrix = function (a) {
        return this.prepend(a.a, a.b, a.c, a.d, a.tx, a.ty), this.prependProperties(a.alpha, a.shadow, a.compositeOperation), this
    }, c.appendMatrix = function (a) {
        return this.append(a.a, a.b, a.c, a.d, a.tx, a.ty), this.appendProperties(a.alpha, a.shadow, a.compositeOperation), this
    }, c.prependTransform = function (a, c, d, e, f, g, h, i, j) {
        if (f % 360)var k = f * b.DEG_TO_RAD, l = Math.cos(k), m = Math.sin(k); else l = 1, m = 0;
        if (i || j)this.tx -= i, this.ty -= j;
        return g || h ? (g *= b.DEG_TO_RAD, h *= b.DEG_TO_RAD, this.prepend(l * d, m * d, -m * e, l * e, 0, 0), this.prepend(Math.cos(h), Math.sin(h), -Math.sin(g), Math.cos(g), a, c)) : this.prepend(l * d, m * d, -m * e, l * e, a, c), this
    }, c.appendTransform = function (a, c, d, e, f, g, h, i, j) {
        if (f % 360)var k = f * b.DEG_TO_RAD, l = Math.cos(k), m = Math.sin(k); else l = 1, m = 0;
        g || h ? (g *= b.DEG_TO_RAD, h *= b.DEG_TO_RAD, this.append(Math.cos(h), Math.sin(h), -Math.sin(g), Math.cos(g), a, c), this.append(l * d, m * d, -m * e, l * e, 0, 0)) : this.append(l * d, m * d, -m * e, l * e, a, c);
        if (i || j)this.tx -= i * this.a + j * this.c, this.ty -= i * this.b + j * this.d;
        return this
    }, c.rotate = function (a) {
        var b = Math.cos(a), c = Math.sin(a), d = this.a, e = this.c, f = this.tx;
        return this.a = d * b - this.b * c, this.b = d * c + this.b * b, this.c = e * b - this.d * c, this.d = e * c + this.d * b, this.tx = f * b - this.ty * c, this.ty = f * c + this.ty * b, this
    }, c.skew = function (a, c) {
        return a = a * b.DEG_TO_RAD, c = c * b.DEG_TO_RAD, this.append(Math.cos(c), Math.sin(c), -Math.sin(a), Math.cos(a), 0, 0), this
    }, c.scale = function (a, b) {
        return this.a *= a, this.d *= b, this.tx *= a, this.ty *= b, this
    }, c.translate = function (a, b) {
        return this.tx += a, this.ty += b, this
    }, c.identity = function () {
        return this.alpha = this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.shadow = this.compositeOperation = null, this
    }, c.invert = function () {
        var a = this.a, b = this.b, c = this.c, d = this.d, e = this.tx, f = a * d - b * c;
        return this.a = d / f, this.b = -b / f, this.c = -c / f, this.d = a / f, this.tx = (c * this.ty - d * e) / f, this.ty = -(a * this.ty - b * e) / f, this
    }, c.isIdentity = function () {
        return this.tx == 0 && this.ty == 0 && this.a == 1 && this.b == 0 && this.c == 0 && this.d == 1
    }, c.decompose = function (a) {
        a == null && (a = {}), a.x = this.tx, a.y = this.ty, a.scaleX = Math.sqrt(this.a * this.a + this.b * this.b), a.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
        var c = Math.atan2(-this.c, this.d), d = Math.atan2(this.b, this.a);
        return c == d ? (a.rotation = d / b.DEG_TO_RAD, this.a < 0 && this.d >= 0 && (a.rotation += a.rotation <= 0 ? 180 : -180), a.skewX = a.skewY = 0) : (a.skewX = c / b.DEG_TO_RAD, a.skewY = d / b.DEG_TO_RAD), a
    }, c.reinitialize = function (a, b, c, d, e, f, g, h, i) {
        return this.initialize(a, b, c, d, e, f), this.alpha = g || 1, this.shadow = h, this.compositeOperation = i, this
    }, c.appendProperties = function (a, b, c) {
        return this.alpha *= a, this.shadow = b || this.shadow, this.compositeOperation = c || this.compositeOperation, this
    }, c.prependProperties = function (a, b, c) {
        return this.alpha *= a, this.shadow = this.shadow || b, this.compositeOperation = this.compositeOperation || c, this
    }, c.clone = function () {
        var a = new b(this.a, this.b, this.c, this.d, this.tx, this.ty);
        return a.shadow = this.shadow, a.alpha = this.alpha, a.compositeOperation = this.compositeOperation, a
    }, c.toString = function () {
        return"[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]"
    }, b.identity = new b(1, 0, 0, 1, 0, 0), a.Matrix2D = b
}(window), function (a) {
    var b = function (a, b, c, d) {
        this.init(), a !== undefined && (typeof a == "string" ? a = new ImageLoader(a, undefined, function () {
            this.setImage(a, b, c)
        }.bind(this)) : this.setImage(a)), d !== undefined && this.setStage(d)
    }, c = b.prototype;
    c.cacheCanvas = null, c.id = -1, c.name = null, c.parent = null, c.zindexCache = 0, c.x = 0, c.y = 0, c.regX = 0, c.regY = 0, c.width = 0, c.height = 0, c._width = 0, c._height = 0, c.scaleX = 1, c.scaleY = 1, c.rotation = 0, c.alpha = 1, c._matrix = null, c.visible = !0, c.mouseEnabled = !0, c.snapToPixel = !1, c.handlers = [], c.onPress = null, c.onClick = null, c.onMousOver = null, c.onMouseOut = null, c.onTick = null, c.init = function () {
        this.id = a.UID(), this._matrix = new a.Matrix2D
    }, c.setZIndex = function (a) {
        this.zindexCache = a, this.updateMaxZIndex(a)
    }, c.getZIndex = function () {
        return this.zindexCache
    }, defineGetterSetter(c, "zIndex", c.getZIndex, c.setZIndex), c.updateMaxZIndex = function (a, b) {
        this._stage !== undefined && (a === undefined && (a = this.zindexCache), this._stage.maxzindex = Math.max(this._stage.maxzindex, a + 1))
    }, c.setWidth = function (a) {
        this._originalWidth = a, this._stage !== undefined ? this._width = this._originalWidth / this._stage.pixelScale : this._width = this._originalWidth, this._halfWidth = this._width / 2
    }, c.getWidth = function () {
        return this._width
    }, defineGetterSetter(c, "width", c.getWidth, c.setWidth), c.setHeight = function (a) {
        this._originalHeight = a, this._stage !== undefined ? this._height = this._originalHeight / this._stage.pixelScale : this._height = this._originalHeight, this._halfHeight = this._height / 2
    }, c.getHeight = function () {
        return this._height
    }, defineGetterSetter(c, "height", c.getHeight, c.setHeight), c.setStage = function (a) {
        this._stage = a, this.refreshDimensions(), this.refreshHalfDimensions(), this.updateMaxZIndex()
    }, c.getStage = function () {
        return this._stage
    }, defineGetterSetter(c, "stage", c.getStage, c.setStage), c.setImage = function (a, b, c) {
        this.cacheCanvas === null && (this.cacheCanvas = document.createElement("canvas")), this.width = b || a.width, this.height = c || a.height, this.cacheCanvas.width = this._originalWidth, this.cacheCanvas.height = this._originalHeight;
        var d = this.cacheCanvas.getContext("2d");
        d.drawImage(a, 0, 0, this._originalWidth, this._originalHeight)
    }, c.setRotationCenter = function () {
        this.regX = this.cacheCanvas.width / 2, this.regY = this.cacheCanvas.height / 2
    }, c.refreshHalfDimensions = function () {
        this._halfHeight = this._height / 2, this._halfWidth = this._width / 2
    }, c.refreshDimensions = function () {
        this._height = this._originalHeight / this._stage.pixelScale, this._width = this._originalWidth / this._stage.pixelScale
    }, c.isVisible = function () {
        return this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0
    }, c.draw = function (a, b, c) {
        if (!this.isVisible())return;
        if (c !== undefined && this.zindexCache !== c && this.childs === undefined)return;
        return b || !this.cacheCanvas ? !1 : (a.drawImage(this.cacheCanvas, 0, 0, this._originalWidth, this._originalHeight), !0)
    }, c.updateContext = function (a, b) {
        if (!this.isVisible())return;
        if (b !== undefined && this.zindexCache !== b && this.childs === undefined)return;
        this._stage === undefined && this.setStage(this.getStage());
        var c, d = this.x, e = this.y;
        this._stage !== undefined && (d = this.x * this._stage.pixelScale, e = this.y * this._stage.pixelScale), c = this._matrix.identity().appendTransform(d, e, this.scaleX, this.scaleY, this.rotation, this.skewX, this.skewY, this.regX, this.regY), a.transform(c.a, c.b, c.c, c.d, c.tx + .5 | 0, c.ty + .5 | 0), a.globalAlpha *= this.alpha
    }, c.getStage = function () {
        if (this.canvas !== undefined)return this;
        var a = undefined, b = this.parent;
        while (a === undefined && b !== undefined)a = b.stage, b = this.parent;
        return a
    }, c.getConcatenatedMatrix = function (b) {
        b ? b.identity() : b = new a.Matrix2D;
        var c = this;
        while (c != null)b.prependTransform(c.x, c.y, c.scaleX, c.scaleY, c.rotation, c.skewX, c.skewY, c.regX, c.regY).prependProperties(c.alpha, c.shadow, c.compositeOperation), c = c.parent;
        return b
    }, c.addEventListener = function (a, b) {
        b = b.bind(this), document.addEventListener(a, b), this.handlers.push({type: a, handler: b})
    }, c.removeEventListener = function (a, b) {
        document.removeEventListener(a, b)
    }, c.cleanListeners = function () {
        for (var a = 0; a < this.handlers.length; a++)this.removeEventListener(this.handlers[a].type, this.handlers[a].handler)
    }, c.distanceToObject = function (a) {
        var b = 0, c = 0;
        return b = a.x + a._halfWidth - (this.x + this._halfWidth), b = b * b, c = a.y + a._halfHeight - (this.y + this._halfHeight), c = c * c, Math.sqrt(b + c)
    }, b.fromJSON = function (a, c) {
        try {
            var d = new b(c.items[a.asset].data)
        } catch (e) {
            throw new Error("Can`t find asset " + a.asset + " in list")
        }
        return d.x = a.x, d.y = a.y, d.zIndex = a.zIndex, d.data = a, d
    }, a.flash.cloneToNamespaces(b, "DisplayObject")
}(window), function (a) {
    var b = function () {
        this.init(), this.childs = [], this.drawFromCache = !1, this.cacheFilled = !1, this.maxzindex = 1
    }, c = b.prototype = new DisplayObject;
    c._draw = c.draw, c.draw = function (a, b, c) {
        if (this.drawFromCache)this.cacheFilled || this.drawToCache(), this._draw(a, !1, c); else for (var d = 0; d < this.childs.length; d++)a.save(), this.childs[d].updateContext(a, c), this.childs[d].draw(a, !1, c), a.restore()
    }, c.drawToCache = function () {
        this.cacheCanvas === undefined && (this.cacheCanvas = document.createElement("canvas"));
        var a = this.cacheCanvas.getContext("2d");
        for (var b = 0; b < this.childs.length; b++)a.save(), this.childs[b].updateContext(a), this.childs[b].draw(a, !1), a.restore();
        this.cacheFilled = !0
    }, c.addChild = function (a) {
        this.childs.push(a), a.parent = this, this.stage !== undefined && (a.stage = this.stage)
    }, c.removeChild = function (a) {
        for (var b = 0; b < this.childs.length; b++)this.childs[b] === a && this.removeChildByIndex(b)
    }, c.removeChildByIndex = function (a) {
        this.childs[a].cleanListeners(), this.childs.splice(a, 1)
    }, a.flash.cloneToNamespaces(b, "DisplayList")
}(window), function (a) {
    var b = function (b, c, d, e) {
        this.options = e || {}, this.canvas = typeof b == "string" ? document.querySelector(b) : b, this.canvas.getContext === undefined && a.flash.showBrowserIsNotSupportedWindow(this.canvas.parentNode), this.context = this.canvas.getContext("2d"), this.canvas.leftOffset && (this.leftOffset = this.canvas.leftOffset), this.baseWidth = c || 480, this.baseHeight = d || 320;
        if (this.options.multiResolution === !0 || this.options.multiResolution === undefined) {
            this.resize();
            var f = this.canvas.offsetWidth || parseInt(this.canvas.style.width), g = this.canvas.offsetHeight || parseInt(this.canvas.style.height), h = window.parent ? window.parent.innerWidth : window.innerWidth, i = window.parent ? window.parent.innerHeight : window.innerHeight;
            this.scale = Math.min(f / this.baseWidth, g / this.baseHeight), this.pixelScale = Math.min(h / this.baseWidth, i / this.baseHeight), this.pixelScale = Math.max(1, Math.ceil(this.pixelScale)), this.pixelScale = Math.min(4, this.pixelScale), this.canvas.pixelScale = this.pixelScale
        } else this.canvas.pixelScale = this.pixelScale = 1;
        this.width = this.canvas.width = this.baseWidth * this.pixelScale, this.height = this.canvas.height = this.baseHeight * this.pixelScale, this.lastFrameTime = Date.now(), this.init(), a.flash.stages = a.flash.stages || {}, a.flash.stages[this.id] = this, this.canvas.addEventListener("resize", this.resize.bind(this)), window.addEventListener("resize", this.resize.bind(this)), this.mouseMoveClosure = function (b) {
            b = a.flash.events.normalizeEvent(b), this.mouseX = b.offsetX, this.mouseY = b.offsetY, this.onMouseMove && this.onmousemove(b)
        }, this.mouseMoveClosure = this.mouseMoveClosure.bind(this), this.clickClosure = function (b) {
            b = a.flash.events.normalizeEvent(b), this.onClick && this.onClick(b)
        }, this.clickClosure = this.clickClosure.bind(this), this.onDownClosure = function (b) {
            b = a.flash.events.normalizeEvent(b), this.startTouchTime = Date.now(), this.onMouseDown && this.onMouseDown(b)
        }, this.onDownClosure = this.onDownClosure.bind(this), this.onUpClosure = function (b) {
            b = a.flash.events.normalizeEvent(b), this.onMouseUp && this.onMouseUp(b)
        }, this.onUpClosure = this.onUpClosure.bind(this), a.flash.initTouch(this), this.childs = [], this.enabled = !0
    }, c = b.prototype = new DisplayList;
    c._addChild = c.addChild, c.addChild = function (a) {
        this._addChild(a), a.stage = this
    }, c.interval = 33, c.mouseX = 0, c.mouseY = 0, c.maxzindex = 1, c.setFrameRate = function (a) {
        this.interval = 1e3 / a
    }, c.render = function () {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
        for (var a = 0; a < this.maxzindex; a++)this.context.save(), this.updateContext(this.context, undefined, a), this.draw(this.context, undefined, a), this.context.restore()
    }, c.resize = function () {
        var a = window.innerWidth, b = window.innerHeight, c = a / this.baseWidth, d = b / this.baseHeight, e = a / b, f = Math.min(c, d);
        this.scale = this.canvas.scale = f;
        if (this.options.scaleToScreen === !0 || this.options.scaleToScreen === undefined)e >= 1.77 && e <= 1.79 ? (this.canvas.style.width = a + "px", this.canvas.style.height = b + "px") : (this.canvas.style.width = this.baseWidth * f + "px", this.canvas.style.height = this.baseHeight * f + "px");
        var g = (window.innerWidth - this.baseWidth * f) / 2;
        this.leftOffset = this.canvas.leftOffset = g;
        var h = this.canvas, i = 0, j = 0;
        do h.offsetLeft !== undefined && (i += h.offsetLeft, j += h.offsetTop, 2); while (h = h.parentNode);
        this.canvas.offsetX = i, this.canvas.offsetY = j, this.onresize && this.onresize()
    }, a.flash.cloneToNamespaces(b, "Stage")
}(window), function (a) {
    var b = function (a, b, c, d, e) {
        this.data = a, this.frames = [], this.flippedFrames = [], this.animations = {}, this._frameWidth = b, this._frameHeight = c, this._totalFrames = d, this._animationsData = e, this.initAnimations(), a !== undefined && (a.constructor == Array ? this.fillFramesFromImagesArray() : this.fillFramesFromSpritesheet())
    };
    p = b.prototype, p.data = {}, p._frameWidth = 0, p._frameHeight = 0, p._totalFrames = 0, p.fillFramesFromSpritesheet = function () {
        var a = Math.round(this.data.width / this._frameWidth), b = Math.round(this.data.height / this._frameHeight);
        for (var c = 0; c < b; c++)for (var d = 0; d < a; d++)if (this.frames.length <= this._totalFrames) {
            var e = document.createElement("canvas");
            e.width = this._frameWidth, e.height = this._frameHeight;
            var f = e.getContext("2d");
            f.drawImage(this.data, this._frameWidth * d, this._frameHeight * c, this._frameWidth, this._frameHeight, 0, 0, this._frameWidth, this._frameHeight), this.frames.push(e)
        }
    }, p.fillFramesFromImagesArray = function () {
        this.frames = this.data
    }, p.fillFlippedFrames = function () {
        for (var b = 0; b < this.frames.length; b++) {
            var c = this.getAnimationByFrameNumber(b);
            c !== undefined && c.makeFlip ? this.flippedFrames.push(a.flash.getFlippedImage(this.frames[b], !0)) : this.flippedFrames.push(undefined)
        }
    }, p.getAnimationByFrameNumber = function (a) {
        for (var b in this.animations) {
            var c = this.animations[b];
            if (c.startFrame <= a && c.endFrame >= a)return c
        }
        return undefined
    }, p.initAnimations = function () {
        for (var a in this._animationsData)this.animations[a] = {name: a, startFrame: this._animationsData[a].startFrame, endFrame: this._animationsData[a].endFrame, interval: this._animationsData[a].interval, makeFlip: this._animationsData[a].makeFlip, looped: this._animationsData[a].looped}
    }, a.flash.cloneToNamespaces(b, "SpriteSheet")
}(window), function (a) {
    var b = function (a) {
        a && this.init(a), this.currentAnimation = {}, this._currentFrame = 0, this._framerate = 24, this._nextAnimation = undefined, this._animationsStack = [], this._frameChanged = 0, this._timesRepeat = 0
    };
    p = b.prototype = new DisplayObject, p._init = p.init, p.paused = !1, p.init = function (a) {
        this._init(), a && (this.spriteSheet = a);
        for (var b in this.spriteSheet.animations)if (this.spriteSheet.animations.hasOwnProperty(b)) {
            this.currentAnimation = this.spriteSheet.animations[b];
            break
        }
        this.width = this.spriteSheet._frameWidth, this.height = this.spriteSheet._frameHeight, this.setCurrentFrame(this.currentAnimation.startFrame)
    }, p.draw = function (a, b, c) {
        if (!this.isVisible())return;
        if (c !== undefined && this.zindexCache !== c && this.childs === undefined)return;
        this.nextFrame();
        if (this.currentAnimationFlipped)var d = this.spriteSheet.flippedFrames[this._currentFrame]; else var d = this.spriteSheet.frames[this._currentFrame];
        if (d == null)return;
        return a.drawImage(d, 0, 0, this.spriteSheet._frameWidth, this.spriteSheet._frameHeight), !0
    }, p.nextFrame = function () {
        var a = Date.now(), b = a - this._frameChanged;
        b > this.currentAnimation.interval && (this.currentAnimation.reverse ? this.setCurrentFrame(this._currentFrame - Math.floor(b / this.currentAnimation.interval)) : this.setCurrentFrame(this._currentFrame + Math.floor(b / this.currentAnimation.interval)));
        if (this.currentAnimation._endFrame <= this._currentFrame && !this.currentAnimation.reverse || this.currentAnimation._endFrame >= this._currentFrame && this.currentAnimation.reverse)this.currentAnimation.callback !== undefined && this.currentAnimation.callback(), this._timesRepeat > 0 ? (this._currentFrame = this.currentAnimation._startFrame, this._timesRepeat--) : this._animationsStack.length > 0 ? (this.setAnimation(this._animationsStack[0].animation, this._animationsStack[0].reverse, this._animationsStack[0].callback), this._animationsStack.shift()) : this.currentAnimation.looped ? this.setCurrentFrame(this.currentAnimation._startFrame, a) : this.setCurrentFrame(this.currentAnimation._endFrame, a)
    }, p.setCurrentFrame = function (a, b) {
        this._currentFrame = a, b !== undefined ? this._frameChanged = b : this._frameChanged = Date.now()
    }, p.setAnimation = function (a, b, c, d, e) {
        a !== this.currentAnimation.name && this.onAnimationChanged !== undefined && (this.currentAnimation !== undefined ? this.onAnimationChanged(this.currentAnimation.name, a, b, c, d, e) : this.onAnimationChanged(undefined, a, b, c, d, e));
        if (this.locked === !0)return;
        this.currentAnimation = this.spriteSheet.animations[a], this.currentAnimation.reverse = b, this.currentAnimation.callback = c, this.currentAnimation.makeFlip ? this.currentAnimationFlipped = e : this.currentAnimationFlipped = !1, this._timesRepeat = d, b ? (this.currentAnimation._startFrame = this.currentAnimation.endFrame, this.currentAnimation._endFrame = this.currentAnimation.startFrame) : (this.currentAnimation._startFrame = this.currentAnimation.startFrame, this.currentAnimation._endFrame = this.currentAnimation.endFrame), this.setCurrentFrame(this.spriteSheet.animations[a]._startFrame)
    }, p.setNextAnimation = function (a, b, c, d) {
        this._animationsStack.push({animation: a, reverse: b, callback: c, flipped: d})
    }, p.clearStack = function () {
        this._animationsStack = []
    }, p.gotoFrame = function (a) {
        this.currentAnimation.endFrame > a && (this._currentFrame = a)
    }, p.play = function () {
        this.paused = !1
    }, p.stop = function () {
        this.paused = !0
    }, a.flash.cloneToNamespaces(b, "SpriteAnimation")
}(window), function (a) {
    a.jqMouseEventToFlashMouseEvent = function (a) {
        return a.localX = a.clientX, a.localY = a.clientY, a.stageX = flash.stage.mouseX, a.stageY = flash.stage.mouseY, a.delta = a.wheelDelta, a
    };
    var b = {MouseEvent: {CLICK: "click", MOUSE_MOVE: "mousemove", MOUSE_DOWN: "mousedown", MOUSE_UP: "mouseup", MOUSE_OUT: "mouseout", MOUSE_OVER: "mouseover"}, KeyboardEvent: {KEY_DOWN: "keydown", KEY_UP: "keyup", UP_CODE: 38, DOWN_CODE: 40, LEFT_CODE: 37, RIGHT_CODE: 39, SPACEBAR_CODE: 32}, Event: {COMPLETE: "load", ENTER_FRAME: "enterframe", RESIZE: "resize"}, IOErrorEvent: {IO_ERROR: "ioerror"}, normalizeEvent: function (a) {
        if (a.clientX === undefined || a.clientY === 0)if (a.touches !== undefined && a.touches[0] !== undefined) {
            var b = a.target, c = 0, d = 0;
            if (b.offsetParent)do c += b.offsetLeft, d += b.offsetTop; while (b = b.offsetParent);
            return mx = a.touches[0].pageX - c, my = a.touches[0].pageY - d, {target: a.target, offsetX: mx / a.target.scale, offsetY: my / a.target.scale}
        }
        if (a.offsetX === undefined) {
            var e = a.layerX;
            a.target.leftOffset !== undefined && (e = a.layerX - a.target.leftOffset)
        }
        return{target: a.target, offsetX: (a.offsetX || e || 0) / a.target.scale, offsetY: (a.offsetY || a.layerY || 0) / a.target.scale}
    }}, c = {keydown: function (a, b) {
    }};
    a.flash.cloneToNamespaces(b, "events"), a.flash.extend(window.Event, flash.events.Event), a.flash.extend(window.IOErrorEvent, flash.events.IOErrorEvent), a.flash.extend(window.LoadingManagerEvent, flash.events.LoadingManagerEvent), a.flash.extend(window.MouseEvent, flash.events.MouseEvent), a.flash.extend(window.KeyboardEvent, flash.events.KeyboardEvent)
}(window), function (a) {
    var b = function (b) {
        var c = 500, d = 5 * b.pixelScale;
        b._fireClickClosure = function (a) {
            if (Date.now() - b.tapStartTime < c) {
                var e = Math.abs(b.tapStartX - b.mouseX), f = Math.abs(b.tapStartY - b.mouseY);
                e + f < d && b.clickClosure(a)
            }
        }, a.flash.events.hasTouch = "ontouchstart"in window, a.flash.events.startEvent = a.flash.events.hasTouch ? "touchstart" : "mousedown", a.flash.events.moveEvent = a.flash.events.hasTouch ? "touchmove" : "mousemove", a.flash.events.endEvent = a.flash.events.hasTouch ? "touchend" : "mouseup", a.flash.events.cancelEvent = a.flash.events.hasTouch ? "touchcancel" : "mouseup", b.canvas.addEventListener(a.flash.events.moveEvent, function (a) {
            b.mouseMoveClosure(a)
        }), b.canvas.addEventListener(a.flash.events.startEvent, function (a) {
            b.tapStartTime = Date.now(), b.tapStartX = b.mouseX, b.tapStartY = b.mouseY, b.onDownClosure(a)
        }), b.canvas.addEventListener(a.flash.events.endEvent, function (a) {
            b._fireClickClosure(a), b.onUpClosure(a)
        }), a.flash.events.hasTouch && b.canvas.addEventListener(a.flash.events.cancelEvent, function (a) {
            b._fireClickClosure(a), b.onUpClosure(a)
        }), document.addEventListener("touchmove", function (a) {
            a.preventDefault()
        }, !1)
    };
    a.flash.cloneToNamespaces(b, "initTouch")
}(window), function (a) {
    a.DeviceMotionEvent !== undefined && a.flash.iOS === !0 && (a.flash.accelerometer = a.flash.accelerometer || {}, a.flash.accelerometer.noiseBarrier = .2, a.addEventListener("devicemotion", function (b) {
        a.flash.accelerometer.oldX = a.flash.accelerometer.x, a.flash.accelerometer.oldY = a.flash.accelerometer.y, a.flash.accelerometer.oldZ = a.flash.accelerometer.z, a.flash.accelerometer.x = event.accelerationIncludingGravity.x, a.flash.accelerometer.y = event.accelerationIncludingGravity.y, a.flash.accelerometer.z = event.accelerationIncludingGravity.z, a.flash.accelerometer.deltaX = Math.abs(a.flash.accelerometer.x) - Math.abs(a.flash.accelerometer.oldX), a.flash.accelerometer.deltaY = Math.abs(a.flash.accelerometer.y) - Math.abs(a.flash.accelerometer.oldY), a.flash.accelerometer.deltaZ = Math.abs(a.flash.accelerometer.z) - Math.abs(a.flash.accelerometer.oldZ), a.flash.accelerometer.noisyX = a.flash.accelerometer.deltaX > a.flash.accelerometer.noiseBarrier ? !1 : !0, a.flash.accelerometer.noisyY = a.flash.accelerometer.deltaY > a.flash.accelerometer.noiseBarrier ? !1 : !0, a.flash.accelerometer.noisyZ = a.flash.accelerometer.deltaZ > a.flash.accelerometer.noiseBarrier ? !1 : !0;
        if (window.orientation === -90 || window.parentOrientation === -90)a.flash.accelerometer.y = a.flash.accelerometer.y * -1;
        if (window.orientation === 90 || window.parentOrientation === 90)a.flash.accelerometer.x = a.flash.accelerometer.x * -1
    }), a.setOrientation = a.setOrientation || function (b) {
        a.parentOrientation = b
    }, a.parent != a && a.setOrientation && a.setOrientation(a.parent.orientation))
}(window), function (a) {
    var b = function (b) {
        a.flash.iOS === !0 && a.flash.APISound.sounds.push(this), this.codec = "mp3", this.loop = !1, this.context = a.flash.APISound.getAudioContext(), this.audio = this.context.createBufferSource(), this.gain = this.context.createGainNode(), this.audio.connect(this.gain), this.gain.connect(this.context.destination), this.onload = this.onload || {}, b !== undefined && (typeof b == "string" ? this.URL = b : (this.buffer = b, this.audio.buffer = this.buffer))
    }, c = b.prototype;
    c.load = function () {
        this.changeCodecTo("mp3");
        var a = new XMLHttpRequest;
        a.open("GET", this.URL, !0), a.responseType = "arraybuffer", a.onload = this.onsoundloaded.bind(this), a.send()
    }, c.onsoundloaded = function (a) {
        this.buffer = this.context.createBuffer(a.target.response, !1), this.audio.buffer = this.buffer, this.onload !== undefined && this.onload()
    }, c.onerror = function () {
        throw new Error("Playback error of sound " + this.URL)
    }, c.play = function () {
        if (flash.soundMuted === !0)return;
        this.audio = this.context.createBufferSource(), this.gain = this.context.createGainNode(), this.audio.connect(this.gain), this.gain.connect(this.context.destination), this.audio.buffer = this.buffer, this.audio.loop = this.loop, this.audio.noteOn(0)
    }, c.stop = function () {
        this.audio.noteOff(0)
    }, c.setVolume = function (a) {
        this.gain.gain.value = a
    }, c.getVolume = function () {
        return this.gain.gain.value
    }, c.changeCodecTo = function (a) {
        this.URL = replaceAll(this.URL, "mp3", a), this.URL = replaceAll(this.URL, "ogg", a), this.URL = replaceAll(this.URL, "wav", a)
    }, b.getAudioContext = function () {
        return this.audioContext !== undefined ? this.audioContext : ("AudioContext"in a ? this.audioContext = new AudioContext : "webkitAudioContext"in a ? this.audioContext = new webkitAudioContext : this.audioContext = !1, this.audioContext)
    }, defineGetterSetter(c, "volume", c.getVolume, c.setVolume), a.flash.iOS === !0 && (b.initAPI = function () {
        var c = b.getFirstReadySound();
        if (c !== undefined) {
            var d = c.volume;
            c.volume = 0, c.play(), c.volume = d, a.removeEventListener("touchstart", b.initAPI)
        }
    }, b.sounds = [], b.getFirstReadySound = function () {
        for (var a = 0; a < b.sounds.length; a++)if (b.sounds[a].buffer !== undefined)return b.sounds[a];
        return undefined
    }, a.addEventListener("touchstart", b.initAPI)), a.flash.cloneToNamespaces(b, "APISound")
}(window), function (a) {
    var b = function (a) {
        this.loop = !1, a !== undefined && (this.audio = new Media(a, this.onsoundended, this.onerror)), this.URL = a, this.onload = this.onload || {}
    }, c = b.prototype;
    c.load = function () {
        this.audio !== undefined && this.audio.release(), this.audio = new Media(URL, this.onsoundended, this.onerror), this.onload()
    }, c.onsoundended = function (a) {
        this.loop === !0 && this.audio.play()
    }, c.onerror = function () {
        throw new Error("Playback error of sound " + this.URL)
    }, c.play = function () {
        if (flash.soundMuted === !0)return;
        this.audio.play()
    }, c.stop = function () {
        this.audio.noteOff(0)
    }, c.setVolume = function (a) {
        console.log("No volume control for this API yet.")
    }, c.getVolume = function () {
        console.log("No volume control for this API yet.")
    }, defineGetterSetter(c, "volume", c.getVolume, c.setVolume), a.flash.cloneToNamespaces(b, "PhonegapSound")
}(window), function (a) {
    var b = function (a) {
        a !== undefined ? this._audio = a : this._audio = new Audio, this.codec = "mp3", this.loop = !1
    }, c = b.prototype;
    c.load = function () {
        if (this.URL === undefined)throw new Error("Trying to load Sound without URL");
        this.codec = "mp3", this._audio.autobuffer = !0, this._audio.preload = "auto", this._audio.autoplay = !1, this._audio.canPlayType("audio/mpeg") ? this.codec = "mp3" : this._audio.canPlayType("audio/ogg; codecs=vorbis") ? this.codec = "ogg" : (this.codec = "mp3", this._audio = document.createElement("video"), this._audio.preload = "auto", this._audio.autobuffer = !0, this.onload()), this.changeCodecTo(this.codec);
        if (this.onload !== undefined) {
            var b = this.onload;
            this.onload = function () {
                b(), this._audio.removeEventListener("canplaythrough", this.onload), this._audio.removeEventListener("load", this.onload, !1)
            }, this.onload = this.onload.bind(this), this._audio.addEventListener("canplaythrough", this.onload, !1), this._audio.addEventListener("load", this.onload, !1)
        }
        a.flash.iOS === !0 && this.onload(), this._audio.src = this.URL
    }, c.changeCodecTo = function (a) {
        this.URL = replaceAll(this.URL, "mp3", a), this.URL = replaceAll(this.URL, "ogg", a), this.URL = replaceAll(this.URL, "wav", a)
    }, c.play = function () {
        if (flash.soundMuted === !0)return;
        this._audio.loop = this.loop;
        if (this._audio.paused)this._audio.loop && this.codec === "ogg" && this._audio.addEventListener("ended", function () {
            this.currentTime = 0, this.play()
        }, !1), this._audio.play(); else {
            var a = this.clone();
            a.play()
        }
    }, c.stop = function () {
        this._audio.stop()
    }, c.clone = function () {
        var a = new Audio;
        a.src = this._audio.src, a.loop = this.loop, a.volume = this.volume;
        var c = new b(a);
        return c.loop = this.loop, c.codec = this.codec, c
    }, c.setVolume = function (a) {
        this._audio.volume = a
    }, c.getVolume = function () {
        return this._audio.volume
    }, defineGetterSetter(c, "volume", c.getVolume, c.setVolume), a.flash.cloneToNamespaces(b, "Sound")
}(window), function (a) {
    var b = function () {
    }, c = b.prototype;
    c.checkCollision = function (a, b, c, d, e) {
        var f = a.getConcatenatedMatrix(), g = b.getConcatenatedMatrix(), h = a.width * d, i = a.height * e, j = f.tx + (a.width - h) * .5, k = f.ty + (a.height - i) * .5, l = b.width * d, m = b.height * e, n = g.tx + (b.width - l) * .5, o = g.ty + (b.height - m) * .5, p = j + h, q = k + i, r = n + l, s = o + m;
        j < r && p > n && k < s && q > o && c(a, b)
    }, a.flash.cloneToNamespaces(b, "CollisionManager")
}(window), function (a) {
    var b = function (b, c, d, e, f) {
        this.context = f, this.options = c, this.callback = d;
        var g = new Image, h = a.URL || a.webkitURL;
        return this.context !== undefined && (this.modifiedVersions = [], this.addModifiedVersions(), this.modifyCallBack()), g.onload = function (a) {
            d !== undefined && d(a)
        }.bind(this), g.onerror = function (a) {
            e !== undefined && e(a)
        }, g.src = b, g
    };
    b.checkLoaderType = function (b, c) {
        var d = a.getFileExtension(b);
        if (d === "jpg" || d === "png" || d === "gif")return!0
    }, b.modifiers = {verticalFlip: function (b) {
        return a.flash.getFlippedImage(b, !1, !0)
    }, horizontalFlip: function (b) {
        return a.flash.getFlippedImage(b, !0, !1)
    }, bothFlip: function (b) {
        return a.flash.getFlippedImage(b, !0, !0)
    }}, p = b.prototype = new DisplayObject, p.cloneOptionsObject = function () {
        var a = cloneObject(this.options);
        return this.cleanOptionsObjectFromModifiers(a)
    }, p.cleanOptionsObjectFromModifiers = function (a) {
        for (var c in this.options)for (var d in b.modifiers)c === d && (a[c] = undefined);
        return a
    }, p.addModifiedVersions = function () {
        for (var a in this.options)for (var c in b.modifiers)if (a === c && this.options[a] !== undefined) {
            var d = this.cloneOptionsObject();
            d.id = d.id + "_" + a, d.appliedModifiers = [], d.appliedModifiers.push(a), d.callback = function (a) {
                for (var c = 0; c < this.appliedModifiers.length; c++)this.data = b.modifiers[this.appliedModifiers[c]].apply(this, [this.data])
            }, this.modifiedVersions.push(d)
        }
        this.context.add(this.modifiedVersions)
    }, p.modifyCallBack = function () {
        this.options.appliedModifiers !== undefined && (this._callback = this.callback, this.callback = function (a) {
            for (var c = 0; c < this.options.appliedModifiers.length; c++)a = b.modifiers[this.options.appliedModifiers[c]].apply(this, [a.target]);
            this._callback()
        })
    }, a.flash.cloneToNamespaces(b, "ImageLoader")
}(window), function (a) {
    var b = function (b, c, d, e, f) {
        return this.url = b || a.webkitURL, this.options = c, this.callback = d, this.spriteSheet = new SpriteSheet(undefined, c.width * c.scale, c.height * c.scale, c.framesTotal, c.animations), this.context = f, this.frames = [], b[b.length - 1] === "/" ? this.addAssetsToLoader() : this.loadSpritesheet(), this.spriteSheet
    };
    p = b.prototype, p.loadSpritesheet = function () {
        this.image = new Image, this.image.src = this.url, this.image.onload = this.onSpritesheetLoad.bind(this), this.image.onerror = function (a) {
            errorCallback !== undefined && errorCallback(a)
        }
    }, p.onSpritesheetLoad = function (a) {
        this.spriteSheet.data = this.image, this.spriteSheet.fillFramesFromSpritesheet(), this.spriteSheet.fillFlippedFrames(), this.callback !== undefined && this.callback(a)
    }, p.addAssetsToLoader = function () {
        this.framesToLoad = 0;
        for (var a = 0; a < this.options.framesTotal; a++) {
            var b = a + (this.options.startFrame + 0);
            b = this.getFileNameByFrameNumber(b);
            var c = {id: this.options.id + "_" + a, url: this.url + b + ".png", callback: this.frameLoaded.bind(this), frameNumber: a};
            this.context.add(c), this.framesToLoad++
        }
    }, p.getFileNameByFrameNumber = function (a) {
        var b = a + "", c = "", d = this.options.fileNameNumbers || 5, e = d - b.length;
        for (var f = 0; f < e; f++)c += "0";
        return c += b, c
    }, p.frameLoaded = function (a) {
        this.framesToLoad--, this.frames[a.frameNumber] = a.data, this.framesToLoad === 0 && (this.spriteSheet.data = this.frames, this.spriteSheet.fillFramesFromImagesArray(), this.spriteSheet.fillFlippedFrames(), this.callback())
    }, b.checkLoaderType = function (a, b) {
        return getFileExtension(a) === "" || b.animations !== undefined
    }, a.flash.cloneToNamespaces(b, "AnimationLoader")
}(window), function (a) {
    var b = function (b, c, d, e, f) {
        this.URL = b, this.loop = c.loop || !1, this.volume = c.volume || 1, this.callback = d, this.errorCallback = e, this.context = f;
        var g = undefined;
        return a.flash.APISound.getAudioContext() !== !1 ? g = new APISound : window.phonegap === undefined && window.cordova === undefined && window.Phonegap === undefined || window.Media === undefined ? g = new Sound : g = new PhonegapSound, g.URL = this.URL, g.loop = this.loop, g.volume = this.volume, g.onload = this.callback, g.onerror = this.callback, g.load(), g
    };
    p = b.prototype, b.checkLoaderType = function (a, b) {
        var c = getFileExtension(a);
        if (c === "ogg" || c === "mp3" || c === "wav")return!0
    }, a.flash.cloneToNamespaces(b, "SoundLoader")
}(window), function (a) {
    var b = function (a, c, d, e, f) {
        var g = b.getLoader(a, c);
        return new g(a, c, d, e, f)
    };
    b.getLoader = function (a, c) {
        for (var d = 0; d < b.loaders.length; d++)if (b.loaders[d].checkLoaderType(a, c))return b.loaders[d]
    }, b.loaders = [AnimationLoader, ImageLoader, SoundLoader], a.flash.cloneToNamespaces(b, "Loader")
}(window), function (a) {
    var b = function (a, b, c) {
        this.urlProperties = a;
        if (b !== undefined)if (typeof b == "string")this.getFromJSON(b, c); else for (var d = 0; d < b.length; d++)this.add(b[d]);
        this.toProceed = 0, this.items = {}, this.loadedItems = 0, this.newItemsCount = 0
    };
    p = b.prototype, p.getFromJSON = function (a, b) {
        if (typeof a == "string") {
            this.loadCallback = b, flash.ajax(a, this.getFromJSON.bind(this));
            return
        }
        var c = a.assetsData;
        this.add(c), this.loadCallback !== undefined && this.load(this.loadCallback)
    }, p.add = function (a, b) {
        if (a !== undefined)if (a.constructor == Array)for (var c = 0; c < a.length; c++)this.add(a[c]); else this.toProceed++, this.newItemsCount++, this.items[a.id] = a, this.items[a.id].url = this.fixURL(this.items[a.id].url), this.items[a.id].callback = this.items[a.id].callback
    }, p.fixURL = function (a) {
        for (var b in this.urlProperties)a = replaceAll(a, "%" + b + "%", this.urlProperties[b]);
        return a
    }, p.remove = function (a) {
        delete this.items[a]
    }, p.get = function (a) {
        if (this.items[a] !== undefined)return this.items[a].data;
        for (var b in this.items)if (this.items[b].url === a)return this.items[b].data
    }, p.finishLoading = function (a) {
        this.newItemsCount = 0, a !== undefined && (a.apply(this, []), this.loadCallback = undefined), this.onFinish !== undefined && this.onFinish.apply(this, [])
    }, p.load = function (a) {
        this.onStart !== undefined && this.onStart.apply(this, []);
        var b = this;
        this.toProceed === 0 && this.finishLoading();
        var c = this.getFirstUnprocessedItem();
        while (c !== undefined) {
            var d = function (c) {
                return function () {
                    b.toProceed--, b.onProgress !== undefined && (b.percentLeft = 100 - b.toProceed / b.newItemsCount * 100, b.onProgress(b)), b.toProceed === 0 && b.finishLoading(a), b.items[c].callback !== undefined && b.items[c].callback(b.items[c])
                }
            }(c);
            this.urlProperties !== undefined ? (this.items[c].startFrame = this.urlProperties.startFrame || 0, this.items[c].scale = this.urlProperties.scale || 1) : (this.items[c].startFrame = 0, this.items[c].scale = 1), this.items[c].data = new Loader(this.items[c].url, b.items[c], d, d, b), this.items[c].processed = !0, c = this.getFirstUnprocessedItem()
        }
    }, p.getFirstUnprocessedItem = function () {
        for (var a in this.items)if (this.items[a].processed === undefined)return a;
        return undefined
    }, p.clean = function () {
        this.items = []
    }, p.onProgress = undefined, p.onFinish = undefined, p.onError = undefined, a.flash.cloneToNamespaces(b, "AssetsList")
}(window), function (a) {
    var b = function (a, b, c) {
        var d = b ? -1 : 1, e = c ? -1 : 1, f = b ? -a.width : 0, g = c ? -a.height : 0, h = document.createElement("canvas");
        h.width = a.width, h.height = a.height;
        var i = h.getContext("2d"), j = document.createElement("canvas");
        j.width = a.width, j.height = a.height;
        var k = j.getContext("2d");
        return i.save(), i.scale(d, e), i.drawImage(a, f, g), k.drawImage(h, 0, 0), i.restore(), j
    };
    a.flash.cloneToNamespaces(b, "getFlippedImage")
}(window), function (a) {
    var b = function () {
        var b = a.document.getElementsByTagName("actionscript");
        for (var c = 0; c < b.length; c++) {
            var d = b[c], e = replaceAll(d.innerHTML, "&lt;", "<");
            e = replaceAll(e, "&gt;", ">");
            var f = d.getAttribute("width"), g = d.getAttribute("height"), h = d.getAttribute("scaleToScreen"), i = a.document.createElement("canvas");
            i.setAttribute("width", f), i.setAttribute("height", g), i.id = "flashjs" + UID(), d.parentNode.appendChild(i), d.parentNode.removeChild(d);
            var j = new Stage("#" + i.id, parseInt(f), parseInt(g));
            j.scaleToScreen = h, e = "(function(stage, canvas, window){" + e + "})(window.flash.stages[" + j.id + '], window.document.getElementById("' + i.id + '"), window)';
            var k = document.createElement("script");
            k.innerHTML = e;
            var l = a.document.getElementsByTagName("head")[0];
            l.appendChild(k)
        }
    };
    a.flash.cloneToNamespaces(b, "executeActionScriptTags")
}(window), window.addEventListener("load", flash.executeActionScriptTags)